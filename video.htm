<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8" />
	<link REL="SHORTCUT ICON" HREF="UVALogo.ico">
	<title>SHIVA Video</title>
 	<link rel="stylesheet" type="text/css" href="css/smoothness/jquery-ui-1.8.16.custom.css">
	<script type="text/javascript" src="shivalib-min.js"></script>
	<script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.7/jquery.min.js"></script>
	<script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>
	<style type="text/css">
		body { font-family:Verdana,Geneva,sans-serif; font-size:xx-small; }
		p.pb { text-align:right; color:#999999; }
		.rounded-corners { -moz-border-radius:8px;-webkit-border-radius:8px;-khtml-border-radius:8px;border-radius:8px;}
		tr.odd { background-color:#e0e0e0; }
		.propTable { background-color:#eee;border-radius:8px;
				  	 background:-moz-linear-gradient(top,#f0f0f0,#dfdfdf);
				  	 background:-webkit-linear-gradient(top, #f0f0f0 0%, #dfdfdf 100%);
				  	 border-collapse: collapse;
				  	 width:278px;
				  	 }
		.unselectable{-moz-user-select: none;     -khtml-user-select: none;
		   			  -webkit-user-select: none;  -ms-user-select: none;   user-select: none;
		   			 }
 	</style>
</head>
<body>
	<div style="width:279px;position:absolute;top:0px;left:0px">
    <table id="propertyTable" class="propTable">
		<tr style='height:8px'><td> </td></tr>
	</table> 
		<p style="text-align:right">
			<img src='annotate.gif' style='vertical-align:bottom' alt='Annotate' onclick='shivaLib.Annotate()'>
			<span id='saveAsDiv'></span>
	</p>		
 	<div id="helpDiv"></div>
	<p>&nbsp;</p><p>&nbsp;</p>
	<div id="outputDiv" style="width:460px"></div>
	</div>
	<div id="containerDiv" style="width:600px;height:400px;position:absolute;top:0px;left:308px"></div>

<script>

///////// GLOBALS   //////////

	var shivaLib=null;
	var shivaGroup="Video"
	var items=new Array();

	var props={
		dataSourceUrl: 				{	def:'zDZFcDGpL4U', 	opt:'string',			des:'Source of video'}, 
		start: 						{	def:'0:0', 			opt:'string',			des:'Starting time (m:s)'}, 
		end: 						{	def:'', 			opt:'string',			des:'Ending time (m:s)'}, 
		autoplay: 					{	def:'false', 		opt:'true|false',		des:'Auto-play?'}, 
		volume: 					{	def:'50', 			opt:'number',			des:'Audio volume'}, 
		height:		 				{	def:'366', 			opt:'number',		 	des:'Height of player'}, 
		width:	 					{	def:'600', 			opt:'number',		 	des:'Width of player'},
		duration:	 				{	def:'?', 			opt:'text',		 		des:'Duration of clip'},
		vnotes: 					{	def:'false', 		opt:'true|false',		des:'Enable note taking?'},
		ntext: 						{	def:'',				opt:'hidden',			des:'Holds notes'},
		ud: 						{	def:'false', 		opt:'true|false',		des:'Enable user draw?'}
		}
	
	var helpText=new Array();
	helpText['Source of video']="Click on the text box to the right and enter a value that sets the source video. <br /> For Youtube videos this is the unique ID YouTube assigns to the URL of a video. Click on the text box to the right to type or paste the jumble of random letters, such as this: zDZFcDGpL4U, extracted from this URL: http://www.youtube.com/watch?v=zDZFcDGpL4U.<br />For Vimeo videos the approach is similar. From a video with the web URL ‘http://vimeo.com/30581015’, copy and paste ‘30581015’ into the text box.";
	helpText['Starting time (m:s)']="Click on the text box to the right and enter a value that sets the starting time, in seconds, when the video will start playing.  For example, if you want the video to start at 1 minute and 45 seconds into the video type 1:45 into the text box.";
	helpText['Ending time (m:s)']="Click on the text box to the right and enter a value that sets the ending time, in seconds, when the video will stop playing. For example, if you want the video to end at 2 minute and 50 seconds into the video type 2:50 into the text box.";
	helpText['Auto-play?']="Use the drop-down menu to the right to choose whether or not the video will play automatically when the page is loaded.";
	helpText['Hide controls?']="Use the drop-down menu to the right to either show or hide the video player’s controls when embedded in a project.";
	helpText['Playlists']="You can string a number of videos together by typing their IDs here, separated by commas."
	helpText['Audio volume']="Click on the text box to the right and enter a value that determines the initial setting of the audio volume.  Enter a number from 0 to 100.";
	helpText['Loop playlists?']="If set to 'true', playlists will play in a continuous loop.";
	helpText['Height of player']="Click on the text box to the right and enter a value that sets the height of the video in pixels, including controls.  Use a number between 1 and 100000.";
	helpText['Duration of clip']="This text box provides a way to instantly see the duration of your video. The duration listed in the video player itself will not reflect your changes made via ‘Starting time’ and ‘Ending time’, whereas this text box will.";	
	helpText['Width of player']="Click on the text box to the right and enter a value that sets the width of the video in pixels, including controls.  Use a number between 1 and 100000.";	
	helpText['OVERVIEW']="This will allow you to specify a video clip from YouTube to play in an embedded player. The start and ending times can be specified.<br/><br/>";
	helpText['OVERVIEW']+="Want to add text, line drawings, circles or pictures to your project?  Just click on the grey colored pencil in a circle button below the attributes box and to activate the SHIVA drawing tool.<br/><br/>";
	helpText['OVERVIEW']+="For more information and detailed instructions for utilizing this tool please visit the UVa Knowledge Base documentation for the <a href='https://wiki.shanti.virginia.edu/x/upy1AQ' target='_blank'> Videos Tool</a>."
	helpText['Enable note taking?']="Take notes while the video is viewed?";
	helpText['Enable user draw?']="Use the drop-down menu to the right to toggle whether or not users can interactively draw on your visualization. Note these drawings are for users only and are not saved with the visualization. In order to draw users will need to click on the pencil icon in the bottom left of your visualization.";
	
///////// INIT  /////////////

	$(document).ready(function() {
		shivaLib=new SHIVA_Show("containerDiv",[{shivaGroup:"Video"}]);
		shivaLib.drupalMan=(""+window.location).match(/pr=d/);
	  	SetAttributes(props);
		ReEdit();
		ShowHelp("startup");
		if (window.addEventListener) 
			window.addEventListener("message",shivaEventHandler,false);
		else
			window.attachEvent("message",shivaEventHandler);
		if (!shivaLib.drupalMan) {
			var str="&nbsp;&nbsp;Share as: <select id='formatter' onChange='SaveData(this.value)'>";
			str+="<option>Choose format</option>";
			str+="<option>WordPress</option>";
			str+="<option>eStore</option>";
			str+="<option>iFrame</option>";
			str+="<option>JSON</option>";
			str+="<option>Web-page</option>";
			str+="</select>"; 
			$("#saveAsDiv").html(str);
			}
		$("body").click(function(e) {
					if (e.altKey) {
						var x=e.clientX-$("#containerDiv").css("left").replace(/px/,"");
						var y=e.clientY-$("#containerDiv").css("top").replace(/px/,"");
						$("#helpDiv").html("<br/><b>Clicked position is: </b> "+x+","+y);
						}
					});
	});

	function shivaEventHandler(e)
	{
		if (e.data.indexOf("GetJSON") == 0) 
			e.source.postMessage("GetJSON="+SaveData("GetJSON"),"*");
		else if (e.data.indexOf("GetWebPage") == 0) 
			e.source.postMessage("GetWebPage="+SaveData("Web-page"),"*");
		else if (e.data.indexOf("GetWordPress") == 0) 
			e.source.postMessage("GetWordPress="+SaveData("WordPress"),"*");
		else if (e.data.indexOf("GetType") == 0) 
			e.source.postMessage("GetType="+shivaGroup,"*");
		else if (e.data.indexOf("PutJSON") == 0)
			ReEdit($.parseJSON(e.data.substr(8)));
	}
 
	function Draw(mode)
	{	
		if (shivaLib.drupalMan) 
			window.parent.postMessage("DataChanged=true","*");
		shivaLib.Draw($.parseJSON(SaveData("GetJSON")));
	}

	function SaveData(mode)
	{
		var re=/id="kaltura_([^"]+)"/;
		var v=re.exec($("#propInput0").val());
		if (v)	
			$("#propInput0").val("kaltura_"+v[1])

		var n=$("#shivaNotesTbl tr").length;						
		if (n) {
			var str="";
			for (var i=0;i<n;++i) 										
			if ($("#ntx-"+i).val())	str+=$("#ntc-"+i).text()+$("#ntx-"+i).val()+"|";
			$("#propInput9").val(str);			
			}
		return shivaLib.SaveData(mode,shivaGroup,null,props);
	}	

	function ReEdit(jsonData)
	{
		shivaLib.ReEdit(jsonData,props);
		Draw();
	}	

	function ShowHelp(att)
	{
		if (shivaLib.player){
			if (shivaLib.VideoDuration()) {
				var str=Math.floor(shivaLib.player.duration()/60)+":";
				str+=Math.ceil(shivaLib.VideoDuration()%60);	
				$("#propInput7").val(str);
				}
			}
		if (att == "startup") 
			$("#helpDiv").html("<br/><p class='pb'><br/>Built by SHANTI<br/>The University of Virginia</p>");
		else
			shivaLib.ShowHelp(att,helpText);
	}	


	function SetAttributes()
	{
		shivaLib.SetAttributes(props);
	}	

	
</script>
</body></html>