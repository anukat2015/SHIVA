<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8" />
	<link REL="SHORTCUT ICON" HREF="UVALogo.ico">
	<title>SHIVA Poster</title>
	<link rel="stylesheet" type="text/css" href="css/smoothness/jquery-ui-1.8.16.custom.css">
 	<script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.7/jquery.min.js"></script>
	<script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>
  	<script type="text/javascript" src="shivalib-min.js"></script>
  	<script type="text/javascript" src="shivalib_poster.js"></script>
	<style type="text/css">
		body { font-family:Verdana,Geneva,sans-serif; font-size:xx-small; }
		p.pb { text-align:right; color:#999999; }
		. { -moz-border-radius:8px;-webkit-border-radius:8px;-khtml-border-radius:8px;border-radius:8px;}
		tr.odd { background-color:#e0e0e0; }
		.rounded-corners { -moz-border-radius:8px;-webkit-border-radius:8px;-khtml-border-radius:8px;border-radius:8px;}
		.propTable { background-color:#eee;border-radius:8px;
				  	 background:-moz-linear-gradient(top,#f0f0f0,#dfdfdf);
				  	 background:-webkit-linear-gradient(top, #f0f0f0 0%, #dfdfdf 100%);
				  	 border-collapse: collapse;
				  	 }
  </style>
</head>
<body style="'background:none transparent">
	<div style="width:279px;position:absolute;top:0px;left:0px">
 		<div style="text-align:center">
 		<span id="controlbar" style="font-size:xx-small">
		<input type='radio' id='cb1' onclick='SetMode("Edit")' name='mainMen' checked='checked' /><label for='cb1'>Edit</label>
		<input type='radio' id='cb2' onclick='SetMode("Connect")' name='mainMen'/><label for='cb2'>Connect</label>
		<input type='radio' id='cb3' onclick='SetMode("View")' name='mainMen'/><label for='cb3'>View</label></span>
		</div><br/><br/>
	
    <table id="propertyTable" class="propTable">
		<tr style="height:8px"><td> </td></tr>
	</table> 
   <p style="text-align:right"><span style="vertical-align:50%">Poster panes </span><span id="toolbar" style="font-size:medium">
		<button type='button' id='tb1' onclick='ShiftItem(-1)'> </button>
		<button type='button' id='tb2' onclick='ShiftItem(1)'> </button>
		<button type='button' id='tb3' onclick='RemoveItem()'> </button>
		<button type='button' id='tb4' onclick='AddNewItem()'> </button>
	</span></p>
	<p style="text-align:right"><img src='annotate.gif' style='vertical-align:bottom' alt='Annotate' onclick='shivaLib.Annotate()'>
		<span id='saveAsDiv'></span>
	<span><br/><br/><a onclick='ShowSample()'><i>Click <u>here</u> to add Poster sample</i></a></span>
		</p>		
 	<div id="helpDiv"> </div>
	<div id="outputDiv" style="width:460px"> </div>
	</div>
	<div id="containerDiv" style="position:absolute;top:0px;left:308px;height:600px;width:800px;"> </div>
 
<script>

///////// GLOBALS   //////////

	var items=new Array();
	var shivaLib=null;
	var shivaGroup="Poster"
	var curDragElement=-1;
	var curDragItem=-1;
	var curDataDrag=-1;
	
	var props={
		pos: 						{	def:'2000|250|250', opt:'hidden',			des:'data'},
		eva: 						{	def:'', 			opt:'hidden',			des:'data'},
		height: 					{	def:'600', 			opt:'number',			des:'Height of poster'},
		width: 						{	def:'800', 			opt:'number',			des:'Width of poster'}, 
		backCol: 					{	def:'eeeeee', 		opt:'color',			des:'Background color'}, 
		dataSourceUrl: 				{	def:'http://www.viseyes.org/shiva/map.jpg', opt:'string',	des:'Background image'}, 
		overview: 					{	def:'true', 		opt:'true|false',		des:'Show overview?'},
		grid: 						{	def:'false', 		opt:'true|false',		des:'Show placement grid?'},
		controlbox: 				{	def:'false', 		opt:'true|false',		des:'Show controlbox?'}, 
		ud: 						{	def:'false', 		opt:'true|false',		des:'Enable user draw?'},
		item: 						{	def:'None', 		opt:'None|',			des:'<b>Choose pane to edit</b>'}, 
		data: 						{	def:'', 			opt:'hidden',			des:'data'},
		url: 						{	def:'', 			opt:'string',			des:'URL or ID of pane'}, 
		layerTitle: 				{	def:'', 			opt:'string',			des:'Control box label'}, 
		scrollbars: 				{	def:'false', 		opt:'true|false',		des:'Show scroll bars?'}, 
		style: 						{	def:'border:3px solid white', opt:'string',	des:'CSS styling'}, 
	}
	
	var helpText=new Array();
	helpText['Height of poster']="The height of the player box where the montage will play in";
	helpText['Width of poster']="The width of the player box where the montage will play in";
	helpText['Enable user draw?']="Use the drop-down menu to the right to toggle whether or not users can interactively draw on your visualization. Note these drawings are for users only and are not saved with the visualization. In order to draw users will need to click on the pencil icon in the bottom left of your visualization.";
	helpText['URL or ID of pane']="The URL of the pane to add to the poster. Alternatively, you can simply put in the eStore number for the SHIVA element.";
	helpText['Show placement grid?']="Show grid to help align panes.";
	helpText['Background color']="Use the text box to the right to set the background color for the poster. Either click on the square color chip icon in the text box to launch the color picker and select a color, or enter a hexadecimal color value directly into the text box.";
	helpText['Show Overview?']="Whether or not to add a small icon at the bottom right of your poster. Clicking this icon will will show or hide a small mini-poser at the bottom right corner of the poster; this mini-poster allows easy navigation through the poster.";
	helpText['Show controlbox?']="Use the drop-down menu to the right to choose whether to show or hide the control box from your poster. The control box allows users to interactively got to specific areas in your poster.";
	helpText['Background image']="Use the text box to enter the full url of an image file thst completely covers the poster.<br/><br/>Make sure it is the same shape as poster's overall height and width.<br/><br/>The image needs to have enough resolution to handle the degree in which you want to allow zooming in.";
	helpText['Control box label']="Short label that will appear in the control box. If you do not provide a label, the pane will not appeear in the control box";
	helpText['Show scroll bars?']="Show controls bars on website and SHIVA viz's the are larger than the space provided for.";
	helpText['CSS styling']="CSS formatted styling for pane box, with multiple styles separated by |'s. i.e. <i>border=2px solid white|background=black</i>";

	
///// INIT  /////////////
	
	$(document).ready(function() {
  		shivaLib=new SHIVA_Show("containerDiv");
		shivaLib.drupalMan=(""+window.location).match(/pr=d/);
	  	shivaLib.SetAttributes(props,items,false);
		shivaLib.callback=Draw;
		shivaLib.posterMode="Edit";
		$("#controlbar").buttonset();
		$("#cb1").button({text: true, icons: { primary: "ui-icon-pencil"}});
		$("#cb2").button({text: true, icons: { primary: "ui-icon-shuffle"}});
		$("#cb3").button({text: true, icons: { primary: "ui-icon-image"}});
		$("#toolbar").buttonset();
		$("#tb1").button({text: false, icons: { primary: "ui-icon-arrowthick-1-n"}}).css("width","25");
		$("#tb2").button({text: false, icons: { primary: "ui-icon-arrowthick-1-s"}}).css("width","25");
		$("#tb3").button({text: false, icons: { primary: "ui-icon-trash"}}).css("width","25");
		$("#tb4").button({text: false, icons: { primary: "ui-icon-plus"}}).css("width","25");

		ReEdit();
		ShowHelp("startup");
		if (window.addEventListener) 
			window.addEventListener("message",shivaEventHandler,false);
		else
			window.attachEvent("message",shivaEventHandler);
		if (!shivaLib.drupalMan) {
			var str="&nbsp;&nbsp;Share as: <select id='formatter' onChange='SaveData(this.value)'>";
			str+="<option>Choose format</option>";
			str+="<option>WordPress</option>";
			str+="<option>eStore</option>";
			str+="<option>iFrame</option>";
			str+="<option>JSON</option>";
			str+="<option>Web-page</option>";
			str+="</select>"; 
			$("#saveAsDiv").html(str);
			}
	});

	function SetMode(type)
	{
		shivaLib.posterMode=type;
		Draw();
	}

	function shivaEventHandler(e)
	{
//		trace(e.data)
		if (e.data.indexOf("GetJSON") == 0) 
			e.source.postMessage("GetJSON="+SaveData("GetJSON"),"*");
		else if (e.data.indexOf("GetWebPage") == 0) 
			e.source.postMessage("GetWebPage="+SaveData("Web-page"),"*");
		else if (e.data.indexOf("GetWordPress") == 0) 
			e.source.postMessage("GetWordPress="+SaveData("WordPress"),"*");
		else if (e.data.indexOf("GetType") == 0) 
			e.source.postMessage("GetType="+shivaGroup,"*");
		else if (e.data.indexOf("PutJSON") == 0) 
			ReEdit($.parseJSON(e.data.substr(8)));
	}

	function Draw(mode)
	{	
		if (shivaLib.drupalMan)
			window.parent.postMessage("DataChanged=true","*");
		if (shivaLib.posterMode == "Connect") 
			DrawConnections();
		else
			shivaLib.Draw($.parseJSON(SaveData("GetJSON")));
	}

	function SaveData(mode)
	{
		return shivaLib.SaveData(mode,shivaGroup,items,props);
	}	

	function ReEdit(jsonData)
	{
		SetAttributes(false);	
		var it=shivaLib.ReEdit(jsonData,props,false);
		if (it)
			items=it;
		SetAttributes(true);
		Draw();
	}

	function ShowHelp(att)
	{
		if (att == "startup") 
			$("#helpDiv").html("<br/><p class='pb'>Built by SHANTI<br/>The University of Virginia</p>");
		else
			shivaLib.ShowHelp(att,helpText);
	}	

	function SetAttributes(keep)
	{
		shivaLib.SetAttributes(props,items,keep);
	}	

///////// ITEMS  /////////////
	
	function AddNewItem()
	{
		var o=new Object;
		var s=0,i=0;
		shivaLib.Sound("ding");
		for (var key in props) {
			if (key == "item")
				s=i;
			++i;
			if (!s)
				continue;
			o[key]=props[key].def;
			}
		var scale=shivaLib.posterScale;
		for (var i=0;i<items.length;++i)
			items[i].name="Pane-"+(i+1);
		var cx=Math.round(shivaLib.posterX*1000)
		var cy=Math.round(shivaLib.posterY*1000)
		o.data=500/scale+"|"+cx+"|"+cy;
		$("#itemInput"+items.length-1+"-1").val(o.data)
		items.push(o);
		for (var i=0;i<items.length;++i)
			items[i].name="Pane-"+(i+1);
	  	shivaLib.SetAttributes(props,items,true);
		Draw();
		$("#accord").accordion({ active: items.length-1 });
	}	
	
	function RemoveItem()
	{
		var active=$("#accord").accordion("option","active");
		if (active === false)
			return;
		shivaLib.Sound("delete");
		items.splice(active,1);
		for (var i=0;i<items.length;++i) 
			items[i].name="Pane-"+(i+1);
	  	shivaLib.SetAttributes(props,items,true);
		Draw();
	}

	function ShiftItem(dir)
	{
		var cur=shivaLib.ShiftItem(dir,items);
		for (var i=0;i<items.length;++i) 
			items[i].name="Pane-"+(i+1);
	  	shivaLib.SetAttributes(props,items,true);
		if (cur != -1)
			$("#accord").accordion({ active: cur });
	}

	function ShowSample()
	{
		var data={
			"item-1": "name:Pane-1;data:239|245|180;url:375;layerTitle:Pie Chart;scrollbars:false;style:",
			"item-2": "name:Pane-2;data:148|843|191;url:401;layerTitle:MLK;scrollbars:false;style:border=3px solid white",
			"item-3": "name:Pane-3;data:200|195|825;url:393;layerTitle:Movie;scrollbars:false;style:border=3px solid white",
			"item-4": "name:Pane-4;data:220|594|513;url:394;layerTitle:Video;scrollbars:false;style:",
			"pos": "1000|500|500",
			"height": "600",
			"width": "800",
			"backCol": "eeeeee",
			"dataSourceUrl": "http://www.viseyes.org/shiva/map.jpg",
			"overview": "true",
			"grid": "false",
			"controlbox": "true",
			"ud": "true",
			"shivaMod": "Wed, 22 May 2013",
			"shivaGroup": "Poster"
			}
		ReEdit(data);
	}

	function DrawPosterGrid()
	{
		if (shivaLib.options.grid != "true")
			return;
		var i,inc,str;
		var w=$("#posterDiv").width();
		var h=$("#posterDiv").height();
		if ($("#posterGridDiv").length == 0)
			$("#posterDiv").append("<div id='posterGridDiv'></div>");	
		$("#posterGridDiv").empty();
		var row="position:absolute;left:0px;width:"+w+"px;height:0px;border:1px dashed #333;opacity:.5;";
		var col="position:absolute;top:0px;height:"+h+"px;width:0px;border :1px dashed #333;opacity:.5;";
		inc=h/4;
		for (i=1;i<4;++i) {
			str="<div style='"+row+"top:"+(inc*i)+"px'></div>"
			$("#posterGridDiv").append(str);
			}
		inc=w/4;
		for (i=1;i<4;++i) {
			str="<div style='"+col+"left:"+(inc*i)+"px'></div>"
			$("#posterGridDiv").append(str);
			}
	}
	
	function DrawPosterOverviewGrid()
	{
		if (shivaLib.options.grid != "true")
			return;
		var i,inc,str;
		var w=$("#posterOverDiv").width();
		var h=$("#posterOverDiv").height();
		var row="position:absolute;left:0px;width:"+w+"px;height:0px;border:1px dashed;opacity:.3;";
		var col="position:absolute;top:0px;height:"+h+"px;width:0px;border:1px dashed;opacity:.3;";
		inc=h/4;
		for (i=1;i<4;++i) {
			str="<div style='"+row+"top:"+(inc*i)+"px'></div>"
			$("#posterOverDiv").append(str);
			}
		inc=w/4;
		for (i=1;i<4;++i) {
			str="<div style='"+col+"left:"+(inc*i)+"px'></div>"
			$("#posterOverDiv").append(str);
			}
	}


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//	CONNECT
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
function DrawConnections()												// DRAW PROXIES/LINES
{
	$("#posterOverDiv").remove();											// Remove overview
	shivaLib.DrawLayerControlBox(null,false);								// Hide control box
	var str="<br>&nbsp;&nbsp;&nbsp;Type EvA scripts here:<br>";
	str+="&nbsp;&nbsp;<textarea id='tevaDat' rows='8' cols='80' >";
	if (!$("#propInput"+1).val())											// If nothing there
		str+="on:data|what:posterFrame-0|Do:load|src:e=390|id:posterFrame-1"; // Put sample in
	else																	// Use from options
		str+=$("#propInput"+1).val();										// Add it
	str+="</textarea>";
	str+="<br/>&nbsp;&nbsp;<button type='button' onclick='onChangeEva()'>Set and test</button>";
	str+="<br><br><br><br>&nbsp;&nbsp;&nbsp;Click <a href='https://docs.google.com/document/d/1Q42_K0Li7ZDtXfY27neZuo7aENZ-yGybKAYMFNBTGqg/edit?usp=sharing' target='blank'>here </a> for preliminary documentation for Eva scripts."; 
	$("#posterDiv").html(str);												// Show menu
}
	
function onChangeEva()
{
	var data=$("#tevaDat").val();
	$("#propInput"+1).val(data);
	shivaLib.options.eva=data;
	$("#cb3").trigger("click");
}
		
</script>
</body></html>