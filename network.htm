<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8" />
	<link REL="SHORTCUT ICON" HREF="UVALogo.ico" />
	<title>SHIVA Network</title>
	<link rel="stylesheet" type="text/css" href="css/smoothness/jquery-ui-1.8.16.custom.css">
	<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7/jquery.min.js"></script>
	<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>
	<script type="text/javascript" src='https://www.google.com/jsapi?autoload={"modules":[{"name":"visualization","version":"1"}]}&key=ABQIAAAAEl4MfDNmnJSmqRhM62lbSRS93451SmbvrhkJBfqEgIbRBj1mFRQana4GQi4rloCfm0x58Iu8rx_fVw'></script>
	<script type="text/javascript" src="SHIVA_Show.js"></script>	
	<script type="text/javascript" src="jit-yc.js"></script>
	<style type="text/css">
		body { font-family:Verdana,Geneva,sans-serif; font-size:xx-small; }
		p.pb { text-align:right; color:#999999; }
		.rounded-corners { -moz-border-radius:8px;-webkit-border-radius:8px;-khtml-border-radius:8px;border-radius:8px;}
		tr.odd { background-color:#e0e0e0; }
		.propTable { background-color:#eee;border-radius:8px;
				  	 background:-moz-linear-gradient(top,#f0f0f0,#dfdfdf);
				  	 background:-webkit-linear-gradient(top, #f0f0f0 0%, #dfdfdf 100%);
				  	 border-collapse: collapse;
				  	 width:278px;
				  	 }
	</style>
</head>
<body>
	<div style="width:279px;position:absolute;top:0px;left:0px">		
		<p><select id="chartType" onchange="SetAttributes(this.value)">
			<option value="rgraph">Radial Graph</option>
			<option value="forcedir">Force Directed</option>
			<option value="hypertree">Hyper Tree</option>
		</select></p>
		<table id="propertyTable" class="propTable">
			<tr style="height:8px"><td> </td></tr>
		</table> 
		<p style="text-align:right">
			<img src='annotate.gif' style='vertical-align:bottom' alt='Annotate' onclick='shivaLib.Annotate()'>
			<span id='saveAsDiv'></span>
		</p>		
		<div id="helpDiv"> </div>
		<div id="outputDiv" style="width:460px"> </div>
	</div>
	<div id="containerDiv" style="width:600px;height:500px;position:absolute;top:40px;left:308px"> </div>

<script>

	///////// GLOBALS   //////////
	
	var shivaLib=null;
	var jv=null;
	var shivaGroup="Network";
	var items=new Array(); 
	var chartType="rgraph";
	var props=null;
	var props={
		rgraph:{
			dataSourceUrl: 				{	def:'https://docs.google.com/spreadsheet/pub?key=0AtzYXVRFwsAMdHh1MnBpZnhHSjVSNFAtY0hZUG5MYmc&output=txt', 		opt:'string',		 des:'Data source URL'}, 
			query: 						{	def:'', 		opt:'string',		 des:'Data filter'}, 
			height: 					{	def:'600', 		opt:'number',		 des:'Height'},
			width: 						{	def:'800', 		opt:'number',		 des:'Width'},
			background_CanvasStyles_strokeStyle: {	def:'555555', 		opt:'color',		 des:'Background ring color'},
			background_CanvasStyles_fillStyle: {	def:'000000', 		opt:'color',		 des:'Background color'},
			Navigation_zooming: 		{	def:'100', 		opt:'number',		 des:'Zoom speed'},
//			levelDistance:				{	def:'75', 		opt:'number',		 des:'Level distance'},
			Node_overridable: 			{	def:'true', 	opt:'false|true',	 des:'Use node styles from data source'},
			Node_type: 					{	def:'circle', 	opt:'circle|square|triangle|star',		 des:'Node shape'},
			Node_dim:					{	def:'5', 		opt:'number',		 des:'Node size'},
			Node_color:					{	def:'ff0066', 	opt:'color',		 des:'Node color'},
			//Node_alpha:				{	def:'1', 		opt:'number',		 des:'Node alpha'},  // When set to < 1, loses labels
			Edge_overridable: 			{	def:'true', 	opt:'false|true',	 des:'Use edge styles from data source'},
			Edge_type:					{	def:'line', 	opt:'line|arrow',	 des:'Link style'},
			Edge_dim:					{	def:'15', 		opt:'number',		 des:'Link arrow head size'},
			Edge_color: 				{	def:'777777', 	opt:'color',		 des:'Link color'},
			Edge_lineWidth:				{	def:'2', 		opt:'number',		 des:'Link line width'},
			Label_type:					{	def:'HTML', 	opt:'HTML|Native|SVG', des:'Label type'},
			Label_style: 				{	def:'normal', 	opt:'normal|italic|bold',		 des:'Font style'},
			Label_size: 				{	def:'14', 		opt:'number',		 des:'Font size'},
			Label_color: 				{	def:'ffff33', 	opt:'color',		 des:'Font color'},
			Label_family: 				{	def:'sans-serif', opt:'sans-serif|serif|monospace',		 des:'Font family'}},
		forcedir:{
			dataSourceUrl: 				{	def:'https://docs.google.com/spreadsheet/pub?key=0AtzYXVRFwsAMdHh1MnBpZnhHSjVSNFAtY0hZUG5MYmc&output=txt', 		opt:'string',		 des:'Data source URL'}, 
			query: 						{	def:'', 		opt:'string',		 des:'Data filter'}, 
			height: 					{	def:'600', 		opt:'number',		 des:'Height'},
			width: 						{	def:'800', 		opt:'number',		 des:'Width'},
			background_CanvasStyles_fillStyle: {	def:'000000', 		opt:'color',		 des:'Background color'},
			Navigation_zooming: 		{	def:'100', 		opt:'number',		 des:'Zoom speed'},
			//levelDistance:				{	def:'75', 		opt:'number',		 des:'Level distance'},
			Node_overridable: 			{	def:'true', 	opt:'false|true',	 des:'Use node styles from data source'},
			Node_type: 					{	def:'circle', 	opt:'circle|square|triangle|star',		 des:'Node shape'},
			Node_dim:					{	def:'5', 		opt:'number',		 des:'Node size'},
			Node_color:					{	def:'ff0066', 	opt:'color',		 des:'Node color'},
			//Node_alpha:				{	def:'1', 		opt:'number',		 des:'Node alpha'},  // When set to < 1, loses labels
			Edge_overridable: 			{	def:'true', 	opt:'false|true',	 des:'Use edge styles from data source'},
			Edge_dim:					{	def:'15', 		opt:'number',		 des:'Link arrow head size'},
			Edge_type:					{	def:'line', 	opt:'line|arrow',	 des:'Link style'},
			Edge_color: 				{	def:'777777', 	opt:'color',		 des:'Link color'},
			Edge_lineWidth:				{	def:'2', 		opt:'number',		 des:'Link line width'},
			Label_type:					{	def:'HTML', 	opt:'HTML|Native|SVG', des:'Label type'},
			Label_style: 				{	def:'normal', 		opt:'normal|italic|bold',		 des:'Font style'},
			Label_size: 				{	def:'14', 		opt:'number',		 des:'Font size'},
			Label_color: 				{	def:'ffff33', 	opt:'color',		 des:'Font color'},
			Label_family: 				{	def:'sans-serif', opt:'sans-serif|serif|monospace',		 des:'Font family'}},
		hypertree:{
			dataSourceUrl: 				{	def:'https://docs.google.com/spreadsheet/pub?key=0AtzYXVRFwsAMdHh1MnBpZnhHSjVSNFAtY0hZUG5MYmc&output=txt', 		opt:'string',		 des:'Data source URL'}, 
			query: 						{	def:'', 		opt:'string',		 des:'Data filter'}, 
			height: 					{	def:'600', 		opt:'number',		 des:'Height'},
			width: 						{	def:'800', 		opt:'number',		 des:'Width'},
			background_CanvasStyles_fillStyle: {	def:'000000', 		opt:'color',		 des:'Background color'},
			Navigation_zooming: 		{	def:'100', 		opt:'number',		 des:'Zoom speed'},
			//levelDistance:				{	def:'75', 		opt:'number',		 des:'Level distance'},
			Node_overridable: 			{	def:'true', 	opt:'false|true',	 des:'Use node styles from data source'},
			Edge_dim:					{	def:'15', 		opt:'number',		 des:'Link arrow head size'},
			Node_type: 					{	def:'circle', 	opt:'circle|square|triangle|star',		 des:'Node shape'},
			Node_dim:					{	def:'5', 		opt:'number',		 des:'Node size'},
			Node_color:					{	def:'ff0066', 	opt:'color',		 des:'Node color'},
			Node_transform:				{	def:'true', 	opt:'false|true',	 des:'Node transform'},
			Edge_overridable: 			{	def:'true', 	opt:'false|true',	 des:'Use edge styles from data source'},
			Edge_type:					{	def:'hyperline', opt:'hyperline|line|arrow',	 des:'Link style'},
			Edge_color: 				{	def:'777777', 	opt:'color',		 des:'Link color'},
			Edge_lineWidth:				{	def:'2', 		opt:'number',		 des:'Link line width'},
			Label_type:					{	def:'HTML', 	opt:'HTML|Native|SVG', des:'Label type'},
			Label_style: 				{	def:'normal', 	opt:'normal|italic|bold',		 des:'Font style'},
			Label_size: 				{	def:'14', 		opt:'number',		 des:'Font size'},
			Label_color: 				{	def:'ffff33', 	opt:'color',		 des:'Font color'},
			Label_family: 				{	def:'sans-serif', opt:'sans-serif|serif|monospace',		 des:'Font family'}}
		};
		
	var helpText=new Array();
	helpText['Data source URL']="A link to a published Google Spreadsheet that contains a list of links and nodes. See <a href='https://wiki.shanti.virginia.edu/x/o5S1AQ' target='_blank'>the Knowledge Base</a> for more information about how to create and link to network data for use in these visualizations.";
	helpText['Data filter']="This field defines conditions to query the Data Source to refine the data obtained from the spreadsheet. You can choose the rows and columns to include based on their values, to sort the data, and to sum it. You can find out more information on how to construct queries <a href='http://code.google.com/apis/chart/interactive/docs/querylanguage.html' target='_blank'> here</a>..";
	helpText['Height']="The height of the visualization.";
	helpText['Width']="The width of the visualization.";
	helpText['Level distance']="The distance between levels, or circles, in pixels.";
	helpText['Zoom speed']="Determines the zoom speed. Set this to a number if you want to turn mouse-scroll zooming on, or just set it to 0 to turn off zooming.  The number will be proportional to the mouse-scroll sensitivity. Try 100 for a rapid zooming experience, or 10 for a more moderate speed.";
	helpText['Background ring color']="The color of the concentric rings in the background of the visualization.";
	helpText['Background color']="The color of the background of the visualization.";
	helpText['Use node styles from data source']="You can override the settings for nodes that appear in this form and use the ones in your data source spreadsheet. See the help documentation for more information.";
	helpText['Node size']="The default radius or height of each node.";
	helpText['Node shape']="The default shape of each node.";
	helpText['Node color']="The default background color of each node.";
	helpText['Node alpha']="The default alpha, or transparency, setting of each node. Set to some decimal value between 0 and 1, where 1 is opaque and 0 completely transparent.";
	helpText['Link arrow head size']="The default radius or height of each node.";
	helpText['Node transform']="Whether to resize the nodes based on their distance from the center.";
	helpText['Use edge styles from data source']="You can override the settings for links that appear in this form and use the ones in your data source spreadsheet. See the help documentation for more information.";
	helpText['Link color']="The default color of link lines.";
	helpText['Link line width']="The default width of link lines in pixels. Used only by some node shapes.";
	helpText['Link style']="The default type or style of link, including 'line,' 'hyperline,' and 'arrow'.  The options and default might vary in each visualization.";
	helpText['Link arrow head size']="The default size of the edge arrow head, when using an edge type like 'arrow'.";
	helpText['Label type']="The system used to render the labels. HTML labels can be clicked on, but Normal labels render more quickly. SVG does not currently display"; 	
	helpText['Font style']="The style of the font label.";
	helpText['Font size']="The size of node labels in pixels.";
	helpText['Font color']="The color of node labels.";
	helpText['Font family']="The font family of node labels.";

	///////// INIT  /////////////
	
	$(document).ready(function() 
	{
		shivaLib=new SHIVA_Show("containerDiv");		
		shivaLib.drupalMan=(""+window.location).match(/pr=d/);
		ReEdit();
		ShowHelp("startup");
		if (window.addEventListener) {
			window.addEventListener("message",shivaEventHandler,false);
			} 
		else
			window.attachEvent("message",shivaEventHandler);
		if (!shivaLib.drupalMan) {
			var str="&nbsp;&nbsp;Share as: <select id='formatter' onChange='SaveData(this.value)'>";
			str+="<option>Choose format</option>";
			str+="<option>WordPress</option>";
			str+="<option>eStore</option>";
			str+="<option>iFrame</option>";
			str+="<option>JSON</option>";
			str+="<option>Web-page</option>";
			str+="</select>"; 
			$("#saveAsDiv").html(str);
			}
	});

	function shivaEventHandler(e)
	{
		if (e.data.indexOf("GetJSON") == 0) 
			e.source.postMessage("GetJSON="+SaveData("GetJSON"),"*");
		else if (e.data.indexOf("GetWebPage") == 0) 
			e.source.postMessage("GetWebPage="+SaveData("Web-page"),"*");
		else if (e.data.indexOf("GetWordPress") == 0) 
			e.source.postMessage("GetWordPress="+SaveData("WordPress"),"*");
		else if (e.data.indexOf("GetType") == 0) 
			e.source.postMessage("GetType="+shivaGroup,"*");
		else if (e.data.indexOf("PutJSON") == 0) 
			ReEdit($.parseJSON(e.data.substr(8)));
	}

	function Draw(mode) 
	{
		if (shivaLib.drupalMan)
			window.parent.postMessage("DataChanged=true","*");
		shivaLib.Draw($.parseJSON(SaveData("GetJSON")));
	}

	function SaveData(mode) 
	{
		return shivaLib.SaveData(mode,shivaGroup,null,props[chartType],chartType);
	}	

	function ReEdit(jsonData) 
	{
	  	SetAttributes(chartType); 
		shivaLib.ReEdit(jsonData,props[chartType]);
		Draw();
	}	

	function ShowHelp(att) 
	{
		if (att == "startup")
			$("#helpDiv").html("<br/><p class='pb'>Powered by JavaScript InfoVis Toolkit<br/><br/>Built by SHANTI<br/>The University of Virginia</p>");
		else
			shivaLib.ShowHelp(att,helpText);
	}	

	function SetAttributes() 
	{
		chartType=$('#chartType').val();
		shivaLib.SetAttributes(props[chartType]);
		Draw();
	}	

	function trace(str) 
	{ 
		console.log(str);
	}
		
</script>
</body>
</html>
